
// import { createContext, ReactNode, useEffect, useState } from "react";

// type User = {
//     email: string;
//     password: string;
//     error: string;
// }

// type AuthContextType = {
//     user: User | undefined;
//     signIn: () => Promise<void>;
// }

// type AuthContextProviderType = {
//     children: ReactNode
// }

// export const AuthContext = createContext({} as AuthContextType);

// export function AuthContextProvider(props: AuthContextProviderType) {
//     const [user, setUser] = useState<User>();

//     useEffect(() => {
//     //     // const unsubscribe = auth.onAuthStateChanged(user => {
//             if (user) {
//     //     //         const { displayName, photoURL, uid } = user

//     //     //         if (!displayName || !photoURL) {
//     //     //             throw new Error('Missing information from Google Account.');
//     //     //         }

//                 setUser({
//                     email: user.email,
//                     password: user.password,
//                     error: ''
//                 });
//             }
//     //     // })

//     //     //Boa pratica Listener
//     //     return () => {
//     //         unsubscribe();
//         // }
//     }, [])

//     async function signIn() {

//         // if (result.user) {
//         //     const { displayName, photoURL, uid } = result.user

//         //     if (!displayName || !photoURL) {
//         //         throw new Error('Missing information from Google Account.');
//         //     }

//         //     setUser({
//         //         id: uid,
//         //         name: displayName,
//         //         avatar: photoURL
//         //     });
//         // }
//     }

//     return (
//         <AuthContext.Provider value={{ user, signIn }}>
//             {props.children}
//         </AuthContext.Provider>
//     );
// }